/* 10. 환불 정보에 대한 시계열 / 데이터 뷰어 - 하단표 SQL */
WITH WT_WHERE AS
    (
        SELECT CAST(FRST_DT_YEAR            AS DATE) AS FR_DT      /* 기준일의  1월  1일       */
              ,CAST(BASE_YEAR    ||'-12-31' AS DATE) AS TO_DT      /* 기준일의 12월 31일       */
              ,CAST(FRST_DT_YEAR_YOY        AS DATE) AS FR_DT_YOY  /* 기준년의  1월  1일  -1년 */
              ,CAST(BASE_YEAR_YOY||'-12-31' AS DATE) AS TO_DT_YOY  /* 기준일의 12월 31일  -1년 */
              ,BASE_YEAR                             AS THIS_YEAR  /* 기준일의 연도            */
              ,BASE_YEAR_YOY                         AS LAST_YEAR  /* 기준일의 연도       -1년 */
          FROM DASH.DASH_INITIAL_DATE
    ), WT_COPY AS
    (
        SELECT 1                                              AS SORT_KEY
              ,'올해 환불'                                     AS ROW_TITL
     UNION ALL
        SELECT 2                                              AS SORT_KEY
              ,'전년도 환불'                                   AS ROW_TITL
     UNION ALL
        SELECT 3                                              AS SORT_KEY
              ,'YoY (전년도 동월 대비 환불 증감)'               AS ROW_TITL
     UNION ALL
        SELECT 4                                              AS SORT_KEY
              ,'MoM (당해 연도 전월 대비 환불 증감)'            AS ROW_TITL
    ), WT_AMT_RMB AS
    (
        SELECT STATISTICS_DATE
              ,VALUE           AS REFD_AMT_RMB
          FROM DASH.SUM_REFDTIMESERIESALLDATA
         WHERE STATISTICS_DATE BETWEEN (SELECT FR_DT FROM WT_WHERE) AND (SELECT TO_DT FROM WT_WHERE)
           AND CHRT_KEY = 'refd_amt_rmb'
    ), WT_AMT_KRW AS
    (
        SELECT STATISTICS_DATE
              ,VALUE           AS REFD_AMT_KRW
          FROM DASH.SUM_REFDTIMESERIESALLDATA
         WHERE STATISTICS_DATE BETWEEN (SELECT FR_DT FROM WT_WHERE) AND (SELECT TO_DT FROM WT_WHERE)
           AND CHRT_KEY = 'refd_amt_krw'
    ), WT_AMT_RMB_YOY AS
    (
        SELECT STATISTICS_DATE
              ,VALUE           AS REFD_AMT_RMB
          FROM DASH.SUM_REFDTIMESERIESALLDATA
         WHERE STATISTICS_DATE BETWEEN (SELECT FR_DT_YOY FROM WT_WHERE) AND (SELECT TO_DT_YOY FROM WT_WHERE)
           AND CHRT_KEY = 'refd_amt_rmb'
    ), WT_AMT_KRW_YOY AS
    (
        SELECT STATISTICS_DATE
              ,VALUE           AS REFD_AMT_KRW
          FROM DASH.SUM_REFDTIMESERIESALLDATA
         WHERE STATISTICS_DATE BETWEEN (SELECT FR_DT_YOY FROM WT_WHERE) AND (SELECT TO_DT_YOY FROM WT_WHERE)
           AND CHRT_KEY = 'refd_amt_krw'
    ), WT_SUM AS
    (
        SELECT 1  AS SORT_KEY
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 01 THEN REFD_AMT_RMB END) AS REFD_AMT_01_RMB /* 01월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 02 THEN REFD_AMT_RMB END) AS REFD_AMT_02_RMB /* 02월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 03 THEN REFD_AMT_RMB END) AS REFD_AMT_03_RMB /* 03월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 04 THEN REFD_AMT_RMB END) AS REFD_AMT_04_RMB /* 04월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 05 THEN REFD_AMT_RMB END) AS REFD_AMT_05_RMB /* 05월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 06 THEN REFD_AMT_RMB END) AS REFD_AMT_06_RMB /* 06월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 07 THEN REFD_AMT_RMB END) AS REFD_AMT_07_RMB /* 07월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 08 THEN REFD_AMT_RMB END) AS REFD_AMT_08_RMB /* 08월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 09 THEN REFD_AMT_RMB END) AS REFD_AMT_09_RMB /* 09월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 10 THEN REFD_AMT_RMB END) AS REFD_AMT_10_RMB /* 10월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 11 THEN REFD_AMT_RMB END) AS REFD_AMT_11_RMB /* 11월 환불 - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 12 THEN REFD_AMT_RMB END) AS REFD_AMT_12_RMB /* 12월 환불 - 위안화 */

              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 01 THEN REFD_AMT_KRW END) AS REFD_AMT_01_KRW /* 01월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 02 THEN REFD_AMT_KRW END) AS REFD_AMT_02_KRW /* 02월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 03 THEN REFD_AMT_KRW END) AS REFD_AMT_03_KRW /* 03월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 04 THEN REFD_AMT_KRW END) AS REFD_AMT_04_KRW /* 04월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 05 THEN REFD_AMT_KRW END) AS REFD_AMT_05_KRW /* 05월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 06 THEN REFD_AMT_KRW END) AS REFD_AMT_06_KRW /* 06월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 07 THEN REFD_AMT_KRW END) AS REFD_AMT_07_KRW /* 07월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 08 THEN REFD_AMT_KRW END) AS REFD_AMT_08_KRW /* 08월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 09 THEN REFD_AMT_KRW END) AS REFD_AMT_09_KRW /* 09월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 10 THEN REFD_AMT_KRW END) AS REFD_AMT_10_KRW /* 10월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 11 THEN REFD_AMT_KRW END) AS REFD_AMT_11_KRW /* 11월 환불 - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 12 THEN REFD_AMT_KRW END) AS REFD_AMT_12_KRW /* 12월 환불 - 원화   */
          FROM WT_AMT_RMB A INNER JOIN WT_AMT_KRW B ON (A.STATISTICS_DATE = B.STATISTICS_DATE)
     UNION ALL
        SELECT 2  AS SORT_KEY
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 01 THEN REFD_AMT_RMB END) AS REFD_AMT_01_RMB /* 01월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 02 THEN REFD_AMT_RMB END) AS REFD_AMT_02_RMB /* 02월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 03 THEN REFD_AMT_RMB END) AS REFD_AMT_03_RMB /* 03월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 04 THEN REFD_AMT_RMB END) AS REFD_AMT_04_RMB /* 04월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 05 THEN REFD_AMT_RMB END) AS REFD_AMT_05_RMB /* 05월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 06 THEN REFD_AMT_RMB END) AS REFD_AMT_06_RMB /* 06월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 07 THEN REFD_AMT_RMB END) AS REFD_AMT_07_RMB /* 07월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 08 THEN REFD_AMT_RMB END) AS REFD_AMT_08_RMB /* 08월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 09 THEN REFD_AMT_RMB END) AS REFD_AMT_09_RMB /* 09월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 10 THEN REFD_AMT_RMB END) AS REFD_AMT_10_RMB /* 10월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 11 THEN REFD_AMT_RMB END) AS REFD_AMT_11_RMB /* 11월 환불 YoY - 위안화 */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 12 THEN REFD_AMT_RMB END) AS REFD_AMT_12_RMB /* 12월 환불 YoY - 위안화 */

              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 01 THEN REFD_AMT_KRW END) AS REFD_AMT_01_KRW /* 01월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 02 THEN REFD_AMT_KRW END) AS REFD_AMT_02_KRW /* 02월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 03 THEN REFD_AMT_KRW END) AS REFD_AMT_03_KRW /* 03월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 04 THEN REFD_AMT_KRW END) AS REFD_AMT_04_KRW /* 04월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 05 THEN REFD_AMT_KRW END) AS REFD_AMT_05_KRW /* 05월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 06 THEN REFD_AMT_KRW END) AS REFD_AMT_06_KRW /* 06월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 07 THEN REFD_AMT_KRW END) AS REFD_AMT_07_KRW /* 07월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 08 THEN REFD_AMT_KRW END) AS REFD_AMT_08_KRW /* 08월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 09 THEN REFD_AMT_KRW END) AS REFD_AMT_09_KRW /* 09월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 10 THEN REFD_AMT_KRW END) AS REFD_AMT_10_KRW /* 10월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 11 THEN REFD_AMT_KRW END) AS REFD_AMT_11_KRW /* 11월 환불 YoY - 원화   */
              ,SUM(CASE WHEN EXTRACT(MONTH FROM CAST(A.STATISTICS_DATE AS DATE)) = 12 THEN REFD_AMT_KRW END) AS REFD_AMT_12_KRW /* 12월 환불 YoY - 원화   */
          FROM WT_AMT_RMB_YOY A INNER JOIN WT_AMT_KRW_YOY B ON (A.STATISTICS_DATE = B.STATISTICS_DATE)
    ), WT_BASE AS
    (
         SELECT A.SORT_KEY
               ,A.ROW_TITL
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_01_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_01_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_01_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_01_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_01_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_12_RMB, 2) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_12_RMB, 2) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_01_RMB  /* 01월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_02_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_02_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_02_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_02_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_02_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_01_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_01_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_02_RMB  /* 02월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_03_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_03_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_03_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_03_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_03_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_02_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_02_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_03_RMB  /* 03월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_04_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_04_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_04_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_04_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_04_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_03_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_03_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_04_RMB  /* 04월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_05_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_05_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_05_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_05_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_05_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_04_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_04_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_05_RMB  /* 05월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_06_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_06_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_06_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_06_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_06_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_05_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_05_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_06_RMB  /* 06월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_07_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_07_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_07_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_07_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_07_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_06_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_06_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_07_RMB  /* 07월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_08_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_08_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_08_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_08_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_08_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_07_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_07_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_08_RMB  /* 08월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_09_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_09_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_09_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_09_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_09_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_08_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_08_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_09_RMB  /* 09월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_10_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_10_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_10_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_10_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_10_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_09_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_09_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_10_RMB  /* 10월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_11_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_11_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_11_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_11_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_11_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_10_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_10_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_11_RMB  /* 11월 환불 - 위안화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_12_RMB
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_12_RMB, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_12_RMB, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_12_RMB, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_12_RMB, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_11_RMB, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_11_RMB, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_12_RMB  /* 12월 환불 - 위안화 */

               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_01_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_01_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_01_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_01_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_01_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_12_KRW, 2) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_12_KRW, 2) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_01_KRW  /* 01월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_02_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_02_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_02_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_02_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_02_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_01_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_01_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_02_KRW  /* 02월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_03_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_03_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_03_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_03_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_03_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_02_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_02_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_03_KRW  /* 03월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_04_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_04_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_04_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_04_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_04_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_03_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_03_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_04_KRW  /* 04월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_05_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_05_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_05_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_05_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_05_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_04_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_04_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_05_KRW  /* 05월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_06_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_06_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_06_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_06_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_06_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_05_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_05_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_06_KRW  /* 06월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_07_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_07_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_07_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_07_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_07_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_06_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_06_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_07_KRW  /* 07월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_08_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_08_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_08_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_08_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_08_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_07_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_07_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_08_KRW  /* 08월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_09_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_09_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_09_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_09_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_09_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_08_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_08_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_09_KRW  /* 09월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_10_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_10_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_10_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_10_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_10_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_09_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_09_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_10_KRW  /* 10월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_11_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_11_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_11_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_11_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_11_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_10_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_10_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_11_KRW  /* 11월 환불 - 원화 */
               ,CASE
                  WHEN A.SORT_KEY IN (1, 2)
                  THEN REFD_AMT_12_KRW
                  WHEN A.SORT_KEY = 3
                  THEN (LAG(REFD_AMT_12_KRW, 2) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_12_KRW, 1) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_12_KRW, 1) OVER(ORDER BY A.SORT_KEY) * 100
                  WHEN A.SORT_KEY = 4
                  THEN (LAG(REFD_AMT_12_KRW, 3) OVER(ORDER BY A.SORT_KEY) - COALESCE(LAG(REFD_AMT_11_KRW, 3) OVER(ORDER BY A.SORT_KEY))) / LAG(REFD_AMT_11_KRW, 3) OVER(ORDER BY A.SORT_KEY) * 100
               END AS REFD_AMT_12_KRW  /* 12월 환불 - 원화 */
          FROM WT_COPY A LEFT OUTER JOIN 
               WT_SUM  B 
            ON (A.SORT_KEY = B.SORT_KEY)
    )
    SELECT ROW_TITL
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_01_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_01_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_01_RMB   /* 01월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_02_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_02_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_02_RMB   /* 02월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_03_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_03_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_03_RMB   /* 03월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_04_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_04_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_04_RMB   /* 04월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_05_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_05_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_05_RMB   /* 05월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_06_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_06_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_06_RMB   /* 06월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_07_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_07_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_07_RMB   /* 07월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_08_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_08_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_08_RMB   /* 08월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_09_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_09_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_09_RMB   /* 09월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_10_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_10_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_10_RMB   /* 10월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_11_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_11_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_11_RMB   /* 11월 환불 - 위안화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_12_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_12_RMB AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_12_RMB   /* 12월 환불 - 위안화 */

          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_01_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_01_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_01_KRW  /* 01월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_02_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_02_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_02_KRW  /* 02월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_03_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_03_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_03_KRW  /* 03월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_04_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_04_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_04_KRW  /* 04월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_05_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_05_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_05_KRW  /* 05월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_06_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_06_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_06_KRW  /* 06월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_07_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_07_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_07_KRW  /* 07월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_08_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_08_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_08_KRW  /* 08월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_09_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_09_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_09_KRW  /* 09월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_10_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_10_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_10_KRW  /* 10월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_11_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_11_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_11_KRW  /* 11월 환불 - 원화 */
          ,CASE WHEN SORT_KEY IN (3, 4) THEN TO_CHAR(CAST(REFD_AMT_12_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999.99%') ELSE TO_CHAR(CAST(REFD_AMT_12_KRW AS DECIMAL(20,2)), 'FM999,999,999,999,999') END AS REFD_AMT_12_KRW  /* 12월 환불 - 원화 */
      FROM WT_BASE
  ORDER BY SORT_KEY